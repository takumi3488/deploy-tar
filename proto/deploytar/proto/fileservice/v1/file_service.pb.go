// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/fileservice/v1/file_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     *string                `protobuf:"bytes,1,opt,name=directory" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListDirectoryRequest) GetDirectory() string {
	if x != nil && x.Directory != nil {
		return *x.Directory
	}
	return ""
}

type DirectoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Size          *string                `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
	Link          *string                `protobuf:"bytes,4,opt,name=link" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectoryEntry) Reset() {
	*x = DirectoryEntry{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEntry) ProtoMessage() {}

func (x *DirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEntry.ProtoReflect.Descriptor instead.
func (*DirectoryEntry) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{1}
}

func (x *DirectoryEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DirectoryEntry) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *DirectoryEntry) GetSize() string {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return ""
}

func (x *DirectoryEntry) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Entries       []*DirectoryEntry      `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	ParentLink    *string                `protobuf:"bytes,3,opt,name=parent_link,json=parentLink" json:"parent_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListDirectoryResponse) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *ListDirectoryResponse) GetEntries() []*DirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListDirectoryResponse) GetParentLink() string {
	if x != nil && x.ParentLink != nil {
		return *x.ParentLink
	}
	return ""
}

type UploadFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadFileRequest_Info
	//	*UploadFileRequest_ChunkData
	Data          isUploadFileRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileRequest) GetData() isUploadFileRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadFileRequest) GetInfo() *FileInfo {
	if x != nil {
		if x, ok := x.Data.(*UploadFileRequest_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *UploadFileRequest) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadFileRequest_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isUploadFileRequest_Data interface {
	isUploadFileRequest_Data()
}

type UploadFileRequest_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,oneof"`
}

type UploadFileRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,oneof"`
}

func (*UploadFileRequest_Info) isUploadFileRequest_Data() {}

func (*UploadFileRequest_ChunkData) isUploadFileRequest_Data() {}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Filename      *string                `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{4}
}

func (x *FileInfo) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	FilePath      *string                `protobuf:"bytes,2,opt,name=file_path,json=filePath" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_fileservice_v1_file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_fileservice_v1_file_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *UploadFileResponse) GetFilePath() string {
	if x != nil && x.FilePath != nil {
		return *x.FilePath
	}
	return ""
}

var File_proto_fileservice_v1_file_service_proto protoreflect.FileDescriptor

const file_proto_fileservice_v1_file_service_proto_rawDesc = "" +
	"\n" +
	"'proto/fileservice/v1/file_service.proto\x12\x0efileservice.v1\"4\n" +
	"\x14ListDirectoryRequest\x12\x1c\n" +
	"\tdirectory\x18\x01 \x01(\tR\tdirectory\"`\n" +
	"\x0eDirectoryEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04size\x18\x03 \x01(\tR\x04size\x12\x12\n" +
	"\x04link\x18\x04 \x01(\tR\x04link\"\x86\x01\n" +
	"\x15ListDirectoryResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x128\n" +
	"\aentries\x18\x02 \x03(\v2\x1e.fileservice.v1.DirectoryEntryR\aentries\x12\x1f\n" +
	"\vparent_link\x18\x03 \x01(\tR\n" +
	"parentLink\"l\n" +
	"\x11UploadFileRequest\x12.\n" +
	"\x04info\x18\x01 \x01(\v2\x18.fileservice.v1.FileInfoH\x00R\x04info\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\x06\n" +
	"\x04data\":\n" +
	"\bFileInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"K\n" +
	"\x12UploadFileResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath2\xc2\x01\n" +
	"\vFileService\x12\\\n" +
	"\rListDirectory\x12$.fileservice.v1.ListDirectoryRequest\x1a%.fileservice.v1.ListDirectoryResponse\x12U\n" +
	"\n" +
	"UploadFile\x12!.fileservice.v1.UploadFileRequest\x1a\".fileservice.v1.UploadFileResponse(\x01B Z\x1edeploytar/proto/fileservice/v1b\beditionsp\xe8\a"

var (
	file_proto_fileservice_v1_file_service_proto_rawDescOnce sync.Once
	file_proto_fileservice_v1_file_service_proto_rawDescData []byte
)

func file_proto_fileservice_v1_file_service_proto_rawDescGZIP() []byte {
	file_proto_fileservice_v1_file_service_proto_rawDescOnce.Do(func() {
		file_proto_fileservice_v1_file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_fileservice_v1_file_service_proto_rawDesc), len(file_proto_fileservice_v1_file_service_proto_rawDesc)))
	})
	return file_proto_fileservice_v1_file_service_proto_rawDescData
}

var file_proto_fileservice_v1_file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_fileservice_v1_file_service_proto_goTypes = []any{
	(*ListDirectoryRequest)(nil),  // 0: fileservice.v1.ListDirectoryRequest
	(*DirectoryEntry)(nil),        // 1: fileservice.v1.DirectoryEntry
	(*ListDirectoryResponse)(nil), // 2: fileservice.v1.ListDirectoryResponse
	(*UploadFileRequest)(nil),     // 3: fileservice.v1.UploadFileRequest
	(*FileInfo)(nil),              // 4: fileservice.v1.FileInfo
	(*UploadFileResponse)(nil),    // 5: fileservice.v1.UploadFileResponse
}
var file_proto_fileservice_v1_file_service_proto_depIdxs = []int32{
	1, // 0: fileservice.v1.ListDirectoryResponse.entries:type_name -> fileservice.v1.DirectoryEntry
	4, // 1: fileservice.v1.UploadFileRequest.info:type_name -> fileservice.v1.FileInfo
	0, // 2: fileservice.v1.FileService.ListDirectory:input_type -> fileservice.v1.ListDirectoryRequest
	3, // 3: fileservice.v1.FileService.UploadFile:input_type -> fileservice.v1.UploadFileRequest
	2, // 4: fileservice.v1.FileService.ListDirectory:output_type -> fileservice.v1.ListDirectoryResponse
	5, // 5: fileservice.v1.FileService.UploadFile:output_type -> fileservice.v1.UploadFileResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_fileservice_v1_file_service_proto_init() }
func file_proto_fileservice_v1_file_service_proto_init() {
	if File_proto_fileservice_v1_file_service_proto != nil {
		return
	}
	file_proto_fileservice_v1_file_service_proto_msgTypes[3].OneofWrappers = []any{
		(*UploadFileRequest_Info)(nil),
		(*UploadFileRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_fileservice_v1_file_service_proto_rawDesc), len(file_proto_fileservice_v1_file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_fileservice_v1_file_service_proto_goTypes,
		DependencyIndexes: file_proto_fileservice_v1_file_service_proto_depIdxs,
		MessageInfos:      file_proto_fileservice_v1_file_service_proto_msgTypes,
	}.Build()
	File_proto_fileservice_v1_file_service_proto = out.File
	file_proto_fileservice_v1_file_service_proto_goTypes = nil
	file_proto_fileservice_v1_file_service_proto_depIdxs = nil
}
